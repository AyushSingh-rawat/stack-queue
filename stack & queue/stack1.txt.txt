## making queue using two stacks...
fuctions are push, pop, empty, peek
Approach :
  stack (stk1, stk2) --> lifo
  queue (que) --> fifo

as we have two stacks stk1, stk2 and we wanna to implement a queue que... so for acheiving this we can do certain steps given as :
PUSH : first push all the elements of stk1 to stk2 then push new pushed element to stk1. Now push all the stored in stk2 to stk1.
img is given as : dry run it by urself 

POP: 

return top of stk1 and delete it from the stk1;

peek : return top of stk1;

empty : return stk1.empty();

OPTIMAL CODE:
 class MyQueue {
    stack<int> stk1;
    stack<int> stk2;
    int size;
public:
    MyQueue() {
  
    }
    
    void push(int x) {
        while(stk2.size() > 0){
            stk1.push(stk2.top());
            stk2.pop();
        }
        stk2.push(x);
        while(stk1.size() > 0){
            stk2.push(stk1.top());
            stk1.pop();
        }
    }
    
    int pop() {
        int ans = stk2.top();
        stk2.pop();
        return ans;
    }
    
    int peek() {
        return stk2.top();
    }
    
    bool empty() {
        return stk2.size() == 0;
    }
};

## Making stack using two queue is similar to this problem.